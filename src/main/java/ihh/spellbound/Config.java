package ihh.spellbound;

import com.google.common.collect.Lists;
import net.minecraft.potion.Effect;
import net.minecraft.potion.EffectInstance;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.common.ForgeConfigSpec;
import net.minecraftforge.registries.ForgeRegistries;

import java.util.ArrayList;
import java.util.List;

public final class Config {
    static ForgeConfigSpec config;
    static ForgeConfigSpec.Builder b;
    public static ForgeConfigSpec.IntValue ADVANCE_TIME_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue ARCHMAGIC_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue AREA_LIGHTNING_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue BEDROCK_WALL_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue BLINK_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue BREACH_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue CHANGE_WEATHER_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue CHAOS_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue COLD_BLAST_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue COLD_SHIELD_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue COLOR_SPRAY_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue COOKIE_CHEST_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue DIMENSION_DOOR_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue DISINTEGRATE_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue ELEMENTAL_FURY_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue FIREBALL_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue FIRE_SHIELD_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue FISH_FORM_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue FLAMING_HANDS_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue FLIGHT_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue GREATER_FIREBALL_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue HASTE_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue ICICLE_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue ICY_GRIP_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue INSTANT_LEVITATION_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue LIGHTNING_BOLT_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue LIGHTNING_SHIELD_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue MISCAST_MAGIC_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue OBSIDIAN_WALL_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue PANIC_ROOM_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue PUSH_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue SPELL_SHIELD_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue STONE_WALL_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue SUMMON_SKELETON_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue SUMMON_WITHER_SKELETON_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue SUMMON_WOLF_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue SURGE_SHIELD_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue TASER_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue TORCHLIGHT_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue WAIL_OF_THE_SHE_WOLF_CHARGE_TIME;
    public static ForgeConfigSpec.IntValue ARCHMAGIC_DURATION;
    public static ForgeConfigSpec.IntValue BLINK_DURATION;
    public static ForgeConfigSpec.IntValue CHAOS_DURATION;
    public static ForgeConfigSpec.IntValue COLD_SHIELD_DURATION;
    public static ForgeConfigSpec.IntValue FIRE_SHIELD_DURATION;
    public static ForgeConfigSpec.IntValue FISH_FORM_DURATION;
    public static ForgeConfigSpec.IntValue FLIGHT_DURATION;
    public static ForgeConfigSpec.IntValue HASTE_DURATION;
    public static ForgeConfigSpec.IntValue LIGHTNING_SHIELD_DURATION;
    public static ForgeConfigSpec.IntValue MISCAST_MAGIC_DURATION;
    public static ForgeConfigSpec.IntValue SPELL_SHIELD_DURATION;
    public static ForgeConfigSpec.IntValue SURGE_SHIELD_DURATION;
    public static ForgeConfigSpec.IntValue SURGE_CHANCE;
    public static ForgeConfigSpec.IntValue SURGE_CHAOS_CHANCE;
    public static ForgeConfigSpec.IntValue SURGE_FIRE;
    private static ForgeConfigSpec.ConfigValue<List<? extends String>> SURGE_POTIONS;
    private static ArrayList<String> SURGE_DEFAULT = Lists.newArrayList("minecraft:weakness;200;0;true;true", "minecraft:poison;200;0;true;true");
    public static ForgeConfigSpec.IntValue ADVANCE_TIME_HORIZONTAL;
    public static ForgeConfigSpec.IntValue ADVANCE_TIME_VERTICAL;
    public static ForgeConfigSpec.IntValue ADVANCE_TIME_MIN;
    public static ForgeConfigSpec.IntValue ADVANCE_TIME_MAX;
    public static ForgeConfigSpec.IntValue AREA_LIGHTNING_HORIZONTAL;
    public static ForgeConfigSpec.IntValue AREA_LIGHTNING_VERTICAL;
    public static ForgeConfigSpec.IntValue AREA_LIGHTNING_DAMAGE;
    public static ForgeConfigSpec.IntValue BEDROCK_WALL_WIDTH;
    public static ForgeConfigSpec.IntValue BEDROCK_WALL_HEIGHT;
    public static ForgeConfigSpec.IntValue BREACH_RANGE;
    public static ForgeConfigSpec.IntValue CHANGE_WEATHER_DURATION;
    public static ForgeConfigSpec.IntValue COLD_BLAST_HORIZONTAL;
    public static ForgeConfigSpec.IntValue COLD_BLAST_VERTICAL;
    public static ForgeConfigSpec.IntValue COLD_BLAST_DURATION;
    public static ForgeConfigSpec.IntValue COLD_BLAST_DAMAGE;
    public static ForgeConfigSpec.IntValue COLOR_SPRAY_HORIZONTAL;
    public static ForgeConfigSpec.IntValue COLOR_SPRAY_VERTICAL;
    public static ForgeConfigSpec.IntValue COLOR_SPRAY_DURATION;
    public static ForgeConfigSpec.IntValue DIMENSION_DOOR_MIN;
    public static ForgeConfigSpec.IntValue DIMENSION_DOOR_MAX;
    public static ForgeConfigSpec.IntValue DISINTEGRATE_DURATION;
    public static ForgeConfigSpec.IntValue DISINTEGRATE_DAMAGE;
    public static ForgeConfigSpec.IntValue ELEMENTAL_FURY_HORIZONTAL;
    public static ForgeConfigSpec.IntValue ELEMENTAL_FURY_VERTICAL;
    public static ForgeConfigSpec.IntValue FLAMING_HANDS_HORIZONTAL;
    public static ForgeConfigSpec.IntValue FLAMING_HANDS_VERTICAL;
    public static ForgeConfigSpec.IntValue FLAMING_HANDS_DAMAGE;
    public static ForgeConfigSpec.IntValue ICICLE_HORIZONTAL;
    public static ForgeConfigSpec.IntValue ICICLE_VERTICAL;
    public static ForgeConfigSpec.IntValue ICICLE_DURATION;
    public static ForgeConfigSpec.IntValue ICICLE_DAMAGE;
    public static ForgeConfigSpec.IntValue ICY_GRIP_HORIZONTAL;
    public static ForgeConfigSpec.IntValue ICY_GRIP_VERTICAL;
    public static ForgeConfigSpec.IntValue ICY_GRIP_DURATION;
    public static ForgeConfigSpec.IntValue ICY_GRIP_DAMAGE;
    public static ForgeConfigSpec.IntValue INSTANT_LEVITATION_HEIGHT;
    public static ForgeConfigSpec.IntValue LIGHTNING_BOLT_DAMAGE;
    public static ForgeConfigSpec.IntValue OBSIDIAN_WALL_WIDTH;
    public static ForgeConfigSpec.IntValue OBSIDIAN_WALL_HEIGHT;
    public static ForgeConfigSpec.IntValue PANIC_ROOM_WIDTH;
    public static ForgeConfigSpec.IntValue PANIC_ROOM_HEIGHT;
    public static ForgeConfigSpec.IntValue PUSH_HORIZONTAL;
    public static ForgeConfigSpec.IntValue PUSH_VERTICAL;
    public static ForgeConfigSpec.IntValue PUSH_DAMAGE;
    public static ForgeConfigSpec.IntValue PUSH_STRENGTH;
    public static ForgeConfigSpec.IntValue STONE_WALL_WIDTH;
    public static ForgeConfigSpec.IntValue STONE_WALL_HEIGHT;
    public static ForgeConfigSpec.IntValue SUMMON_WOLF_OFFSET;
    public static ForgeConfigSpec.IntValue TASER_DURATION;
    public static ForgeConfigSpec.IntValue TASER_DAMAGE;
    public static ForgeConfigSpec.IntValue TORCHLIGHT_LIGHT_LEVEL;
    public static ForgeConfigSpec.IntValue WAIL_OF_THE_SHE_WOLF_HORIZONTAL;
    public static ForgeConfigSpec.IntValue WAIL_OF_THE_SHE_WOLF_VERTICAL;
    public static ForgeConfigSpec.IntValue WAIL_OF_THE_SHE_WOLF_DAMAGE;

    static {
        b = new ForgeConfigSpec.Builder();
        comment("How long spells need to be charged, in ticks.");
        push("spell_time");
        ADVANCE_TIME_CHARGE_TIME = define("advance_time", 20, 0, 72000);
        ARCHMAGIC_CHARGE_TIME = define("archmagic", 100, 0, 72000);
        AREA_LIGHTNING_CHARGE_TIME = define("area_lightning", 60, 0, 72000);
        BEDROCK_WALL_CHARGE_TIME = define("bedrock_wall", 80, 0, 72000);
        BLINK_CHARGE_TIME = define("blink", 60, 0, 72000);
        BREACH_CHARGE_TIME = define("breach", 40, 0, 72000);
        CHANGE_WEATHER_CHARGE_TIME = define("change_weather", 60, 0, 72000);
        CHAOS_CHARGE_TIME = define("chaos", 60, 0, 72000);
        COLD_BLAST_CHARGE_TIME = define("cold_blast", 60, 0, 72000);
        COLD_SHIELD_CHARGE_TIME = define("cold_shield", 20, 0, 72000);
        COLOR_SPRAY_CHARGE_TIME = define("color_spray", 40, 0, 72000);
        COOKIE_CHEST_CHARGE_TIME = define("cookie_chest", 100, 0, 72000);
        DIMENSION_DOOR_CHARGE_TIME = define("dimension_door", 80, 0, 72000);
        DISINTEGRATE_CHARGE_TIME = define("disintegrate", 100, 0, 72000);
        ELEMENTAL_FURY_CHARGE_TIME = define("elemental_fury", 100, 0, 72000);
        FIREBALL_CHARGE_TIME = define("fireball", 40, 0, 72000);
        FIRE_SHIELD_CHARGE_TIME = define("fire_shield", 20, 0, 72000);
        FISH_FORM_CHARGE_TIME = define("fish_form", 60, 0, 72000);
        FLAMING_HANDS_CHARGE_TIME = define("flaming_hands", 20, 0, 72000);
        FLIGHT_CHARGE_TIME = define("flight", 80, 0, 72000);
        GREATER_FIREBALL_CHARGE_TIME = define("greater_fireball", 60, 0, 72000);
        HASTE_CHARGE_TIME = define("haste", 40, 0, 72000);
        ICICLE_CHARGE_TIME = define("icicle", 40, 0, 72000);
        ICY_GRIP_CHARGE_TIME = define("icy_grip", 20, 0, 72000);
        INSTANT_LEVITATION_CHARGE_TIME = define("instant_levitation", 0, 0, 72000);
        LIGHTNING_BOLT_CHARGE_TIME = define("lightning_bolt", 40, 0, 72000);
        LIGHTNING_SHIELD_CHARGE_TIME = define("lightning_shield", 20, 0, 72000);
        MISCAST_MAGIC_CHARGE_TIME = define("miscast_magic", 60, 0, 72000);
        OBSIDIAN_WALL_CHARGE_TIME = define("obsidian_wall", 80, 0, 72000);
        PANIC_ROOM_CHARGE_TIME = define("panic_room", 100, 0, 72000);
        PUSH_CHARGE_TIME = define("push", 20, 0, 72000);
        SPELL_SHIELD_CHARGE_TIME = define("spell_shield", 100, 0, 72000);
        STONE_WALL_CHARGE_TIME = define("stone_wall", 80, 0, 72000);
        SUMMON_SKELETON_CHARGE_TIME = define("summon_skeleton", 40, 0, 72000);
        SUMMON_WITHER_SKELETON_CHARGE_TIME = define("summon_wither_skeleton", 60, 0, 72000);
        SUMMON_WOLF_CHARGE_TIME = define("summon_wolf", 20, 0, 72000);
        SURGE_SHIELD_CHARGE_TIME = define("surge_shield", 20, 0, 72000);
        TASER_CHARGE_TIME = define("taser", 20, 0, 72000);
        TORCHLIGHT_CHARGE_TIME = define("torchlight", 0, 0, 72000);
        WAIL_OF_THE_SHE_WOLF_CHARGE_TIME = define("wail_of_the_she_wolf", 100, 0, 72000);
        pop();
        comment("How long the effects from effect-giving spells last, in ticks.");
        push("effect_durations");
        ARCHMAGIC_DURATION = define("archmagic", 400, 0, 1000000);
        BLINK_DURATION = define("blink", 1200, 0, 1000000);
        CHAOS_DURATION = define("chaos", 200, 0, 1000000);
        COLD_SHIELD_DURATION = define("cold_shield", 1200, 0, 1000000);
        FIRE_SHIELD_DURATION = define("fire_shield", 1200, 0, 1000000);
        FISH_FORM_DURATION = define("fish_form", 1200, 0, 1000000);
        FLIGHT_DURATION = define("flight", 400, 0, 1000000);
        HASTE_DURATION = define("haste", 1200, 0, 1000000);
        LIGHTNING_SHIELD_DURATION = define("lightning_shield", 1200, 0, 1000000);
        MISCAST_MAGIC_DURATION = define("miscast_magic", 200, 0, 1000000);
        SPELL_SHIELD_DURATION = define("spell_shield", 400, 0, 1000000);
        SURGE_SHIELD_DURATION = define("surge_shield", 1200, 0, 1000000);
        pop();
        comment("Settings regarding surges.");
        push("surges");
        SURGE_CHANCE = define("The chance (1 in X) for surges to occur. Set to 0 to disable surges entirely when not having the Chaos effect.", "chance", 200, 0, 1000000);
        SURGE_CHAOS_CHANCE = define("The chance (1 in X) for surges to occur when the Chaos potion effect is active. Set to 0 to instead disable surges when Chaos is active.", "chaos_chance", 2, 0, 1000000);
        SURGE_FIRE = define("How long the fire surge sets you on fire. Set this to 0 to disable.", "fire", 10, 0, Integer.MAX_VALUE);
        SURGE_POTIONS = b.comment("List of potion surges. Format is \"registryName;duration;amplifier;showParticles;showIcon\". If this is empty, the fire surge will always occur (if enabled).").defineList("potions", SURGE_DEFAULT, o -> ((String) o).split(";").length >= 2 && ((String) o).split(";").length <= 5);
        pop();
        comment("Spell effect settings.");
        push("spells");
        push("icy_grip");
        ICY_GRIP_HORIZONTAL = define("horizontal_range", 1, 1, 64);
        ICY_GRIP_VERTICAL = define("vertical_range", 1, 1, 64);
        ICY_GRIP_DURATION = define("slowness_duration", 100, 0, 1000000);
        ICY_GRIP_DAMAGE = define("damage", 4, 0, Integer.MAX_VALUE);
        pop();
        push("icicle");
        ICICLE_HORIZONTAL = define("horizontal_range", 3, 1, 64);
        ICICLE_VERTICAL = define("vertical_range", 3, 1, 64);
        ICICLE_DURATION = define("slowness_duration", 200, 0, 1000000);
        ICICLE_DAMAGE = define("damage", 8, 0, Integer.MAX_VALUE);
        pop();
        push("cold_blast");
        COLD_BLAST_HORIZONTAL = define("horizontal_range", 5, 1, 64);
        COLD_BLAST_VERTICAL = define("vertical_range", 5, 1, 64);
        COLD_BLAST_DURATION = define("slowness_duration", 300, 0, 1000000);
        COLD_BLAST_DAMAGE = define("damage", 10, 0, Integer.MAX_VALUE);
        pop();
        push("flaming_hands");
        FLAMING_HANDS_HORIZONTAL = define("horizontal_range", 3, 1, 64);
        FLAMING_HANDS_VERTICAL = define("vertical_range", 3, 1, 64);
        FLAMING_HANDS_DAMAGE = define("damage", 4, 0, Integer.MAX_VALUE);
        pop();
        push("taser");
        TASER_DURATION = define("slowness_duration", 1200, 0, 1000000);
        TASER_DAMAGE = define("damage", 4, 0, Integer.MAX_VALUE);
        pop();
        push("lightning_bolt");
        LIGHTNING_BOLT_DAMAGE = define("damage", 8, 0, Integer.MAX_VALUE);
        pop();
        push("area_lightning");
        AREA_LIGHTNING_HORIZONTAL = define("horizontal_range", 32, 0, 256);
        AREA_LIGHTNING_VERTICAL = define("vertical_range", 8, 0, 256);
        AREA_LIGHTNING_DAMAGE = define("damage", 10, 0, Integer.MAX_VALUE);
        pop();
        push("summon_wolf");
        SUMMON_WOLF_OFFSET = define("Wolf spawn offset", "offset", 4, 0, 8);
        pop();
        push("disintegrate");
        DISINTEGRATE_DURATION = define("fire_duration", 20, 0, 1000);
        DISINTEGRATE_DAMAGE = define("damage", 100, 0, Integer.MAX_VALUE);
        pop();
        push("elemental_fury");
        ELEMENTAL_FURY_HORIZONTAL = define("horizontal_range", 32, 0, 256);
        ELEMENTAL_FURY_VERTICAL = define("vertical_range", 8, 0, 256);
        pop();
        push("panic_room");
        PANIC_ROOM_WIDTH = define("width", 5, 1, 8);
        PANIC_ROOM_HEIGHT = define("height", 3, 1, 8);
        pop();
        push("wail_of_the_she_wolf");
        WAIL_OF_THE_SHE_WOLF_HORIZONTAL = define("horizontal_range", 32, 0, 256);
        WAIL_OF_THE_SHE_WOLF_VERTICAL = define("vertical_range", 8, 0, 256);
        WAIL_OF_THE_SHE_WOLF_DAMAGE = define("damage", 20, 0, Integer.MAX_VALUE);
        pop();
        push("breach");
        BREACH_RANGE = define("range", 1, 0, 8);
        pop();
        push("dimension_door");
        DIMENSION_DOOR_MIN = define("min", 192, 0, 1024);
        DIMENSION_DOOR_MAX = define("max", 256, 0, 1024);
        pop();
        push("panic_room");
        BEDROCK_WALL_WIDTH = define("width", 5, 1, 8);
        BEDROCK_WALL_HEIGHT = define("height", 3, 1, 8);
        pop();
        push("panic_room");
        OBSIDIAN_WALL_WIDTH = define("width", 5, 1, 8);
        OBSIDIAN_WALL_HEIGHT = define("height", 3, 1, 8);
        pop();
        push("panic_room");
        STONE_WALL_WIDTH = define("width", 5, 1, 8);
        STONE_WALL_HEIGHT = define("height", 3, 1, 8);
        pop();
        push("color_spray");
        COLOR_SPRAY_HORIZONTAL = define("horizontal_range", 6, 0, 256);
        COLOR_SPRAY_VERTICAL = define("vertical_range", 2, 0, 256);
        COLOR_SPRAY_DURATION = define("blindness_duration", 200, 0, 1000000);
        pop();
        push("push");
        PUSH_HORIZONTAL = define("horizontal_range", 32, 0, 256);
        PUSH_VERTICAL = define("vertical_range", 8, 0, 256);
        PUSH_DAMAGE = define("damage", 0, 0, Integer.MAX_VALUE);
        PUSH_STRENGTH = define("Knockback strength", "strength", 8, 0, Integer.MAX_VALUE);
        pop();
        push("advance_time");
        ADVANCE_TIME_HORIZONTAL = define("horizontal_range", 32, 0, 256);
        ADVANCE_TIME_VERTICAL = define("vertical_range", 8, 0, 256);
        ADVANCE_TIME_MIN = define("min", 0, 0, 24000);
        ADVANCE_TIME_MAX = define("max", 24000, 0, 24000);
        pop();
        push("change_weather");
        CHANGE_WEATHER_DURATION = define("Similar to /weather clear <duration>", "weather_duration", 1000000, 1, 1000000);
        pop();
        push("instant_levitation");
        INSTANT_LEVITATION_HEIGHT = define("Teleport height", "height", 4, 0, 255);
        pop();
        push("torchlight");
        TORCHLIGHT_LIGHT_LEVEL = define("The max block light level where a torch is placed", "light_level", 7, 0, 15);
        pop();
        pop();
        config = b.build();
    }

    private static void push(String s) {
        b.push(s);
    }

    private static void pop() {
        b.pop();
    }

    private static void comment(String s) {
        b.comment(s);
    }

    private static ForgeConfigSpec.IntValue define(String c, String s, int i, int min, int max) {
        if (!c.isEmpty()) comment(c);
        return b.defineInRange(s, i, min, max);
    }

    private static ForgeConfigSpec.IntValue define(String s, int i, int min, int max) {
        return b.defineInRange(s, i, min, max);
    }

    public static ArrayList<EffectInstance> getEffects() {
        ArrayList<EffectInstance> l = new ArrayList<>();
        SURGE_POTIONS.get().stream().map(s -> s.split(";")).filter(s -> s.length >= 2 && s.length <= 5).forEach(s -> {
            try {
                Effect e = ForgeRegistries.POTIONS.getValue(new ResourceLocation(s[0]));
                if (e == null) return;
                int duration = Integer.parseInt(s[1]);
                int amplifier = s.length > 2 ? Integer.parseInt(s[2]) : 0;
                l.add(new EffectInstance(e, duration <= 1 ? 1 : Math.min(duration, 1000000), amplifier <= 0 ? 0 : Math.min(amplifier, 127), s.length <= 3 || Boolean.parseBoolean(s[3]), s.length <= 4 || Boolean.parseBoolean(s[4])));
            } catch (RuntimeException e) {
                e.printStackTrace();
            }
        });
        return l;
    }
}
