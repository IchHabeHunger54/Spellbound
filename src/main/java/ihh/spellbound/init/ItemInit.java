package ihh.spellbound.init;

import ihh.spellbound.Config;
import ihh.spellbound.Spellbound;
import ihh.spellbound.item.AdvanceTime;
import ihh.spellbound.item.BedrockWall;
import ihh.spellbound.item.ChangeWeather;
import ihh.spellbound.item.CookieChest;
import ihh.spellbound.item.DimensionDoor;
import ihh.spellbound.item.InstantLevitation;
import ihh.spellbound.item.ObsidianWall;
import ihh.spellbound.item.PanicRoom;
import ihh.spellbound.item.PotionSpell;
import ihh.spellbound.item.ProjectileSpell;
import ihh.spellbound.item.StoneWall;
import ihh.spellbound.item.Torchlight;
import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraftforge.registries.RegistryObject;

public interface ItemInit extends IInit {
    Item.Properties GROUP = new Item.Properties().tab(Spellbound.GROUP);
    RegistryObject<BlockItem> DECAYING_BEDROCK = ITEMS.register("decaying_bedrock", () -> new BlockItem(BlockInit.DECAYING_BEDROCK.get(), GROUP));
    RegistryObject<BlockItem> DECAYING_OBSIDIAN = ITEMS.register("decaying_obsidian", () -> new BlockItem(BlockInit.DECAYING_OBSIDIAN.get(), GROUP));
    RegistryObject<BlockItem> SPECKLED_RED_MAGIC_MUSHROOM = ITEMS.register("speckled_red_magic_mushroom", () -> new BlockItem(BlockInit.SPECKLED_RED_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> SPECKLED_ORANGE_MAGIC_MUSHROOM = ITEMS.register("speckled_orange_magic_mushroom", () -> new BlockItem(BlockInit.SPECKLED_ORANGE_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> SPECKLED_PINK_MAGIC_MUSHROOM = ITEMS.register("speckled_pink_magic_mushroom", () -> new BlockItem(BlockInit.SPECKLED_PINK_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> SPECKLED_BLUE_MAGIC_MUSHROOM = ITEMS.register("speckled_blue_magic_mushroom", () -> new BlockItem(BlockInit.SPECKLED_BLUE_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> LIGHT_BLUE_MAGIC_MUSHROOM = ITEMS.register("light_blue_magic_mushroom", () -> new BlockItem(BlockInit.LIGHT_BLUE_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> ORANGE_MAGIC_MUSHROOM = ITEMS.register("orange_magic_mushroom", () -> new BlockItem(BlockInit.ORANGE_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> YELLOW_MAGIC_MUSHROOM = ITEMS.register("yellow_magic_mushroom", () -> new BlockItem(BlockInit.YELLOW_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> PURPLE_MAGIC_MUSHROOM = ITEMS.register("purple_magic_mushroom", () -> new BlockItem(BlockInit.PURPLE_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> RAINBOW_MAGIC_MUSHROOM = ITEMS.register("rainbow_magic_mushroom", () -> new BlockItem(BlockInit.RAINBOW_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> GOLD_MAGIC_MUSHROOM = ITEMS.register("gold_magic_mushroom", () -> new BlockItem(BlockInit.GOLD_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> GRAY_MAGIC_MUSHROOM = ITEMS.register("gray_magic_mushroom", () -> new BlockItem(BlockInit.GRAY_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> BLACK_MAGIC_MUSHROOM = ITEMS.register("black_magic_mushroom", () -> new BlockItem(BlockInit.BLACK_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<BlockItem> WHITE_MAGIC_MUSHROOM = ITEMS.register("white_magic_mushroom", () -> new BlockItem(BlockInit.WHITE_MAGIC_MUSHROOM.get(), GROUP));
    RegistryObject<Item> BASE_TABLET = ITEMS.register("base_tablet", () -> new Item(GROUP));
    RegistryObject<Item> COLD_TABLET = ITEMS.register("cold_tablet", () -> new Item(GROUP));
    RegistryObject<Item> FIRE_TABLET = ITEMS.register("fire_tablet", () -> new Item(GROUP));
    RegistryObject<Item> LIGHTNING_TABLET = ITEMS.register("lightning_tablet", () -> new Item(GROUP));
    RegistryObject<Item> SUMMON_TABLET = ITEMS.register("summon_tablet", () -> new Item(GROUP));
    RegistryObject<Item> DISRUPTION_TABLET = ITEMS.register("disruption_tablet", () -> new Item(GROUP));
    RegistryObject<Item> DIVINATION_TABLET = ITEMS.register("divination_tablet", () -> new Item(GROUP));
    RegistryObject<Item> PROTECTION_TABLET = ITEMS.register("protection_tablet", () -> new Item(GROUP));
    RegistryObject<Item> MUNDANE_TABLET = ITEMS.register("mundane_tablet", () -> new Item(GROUP));
    RegistryObject<ProjectileSpell> ICY_GRIP = ITEMS.register("icy_grip", () -> new ProjectileSpell(Config.ICY_GRIP_USE_DURATION, EntityInit.ICY_GRIP));
    RegistryObject<ProjectileSpell> ICICLE = ITEMS.register("icicle", () -> new ProjectileSpell(Config.ICICLE_USE_DURATION, EntityInit.ICICLE));
    RegistryObject<ProjectileSpell> COLD_BLAST = ITEMS.register("cold_blast", () -> new ProjectileSpell(Config.COLD_BLAST_USE_DURATION, EntityInit.COLD_BLAST));
    RegistryObject<PotionSpell> COLD_SHIELD = ITEMS.register("cold_shield", () -> new PotionSpell(Config.COLD_SHIELD_USE_DURATION, () -> new MobEffectInstance(EffectInit.cold_shield, Config.COLD_SHIELD_DURATION.get())));
    RegistryObject<ProjectileSpell> FLAMING_HANDS = ITEMS.register("flaming_hands", () -> new ProjectileSpell(Config.FLAMING_HANDS_USE_DURATION, EntityInit.FLAMING_HANDS));
    RegistryObject<ProjectileSpell> FIREBALL = ITEMS.register("fireball", () -> new ProjectileSpell(Config.FIREBALL_USE_DURATION, EntityInit.FIREBALL));
    RegistryObject<ProjectileSpell> GREATER_FIREBALL = ITEMS.register("greater_fireball", () -> new ProjectileSpell(Config.GREATER_FIREBALL_USE_DURATION, EntityInit.GREATER_FIREBALL));
    RegistryObject<PotionSpell> FIRE_SHIELD = ITEMS.register("fire_shield", () -> new PotionSpell(Config.FIRE_SHIELD_USE_DURATION, () -> new MobEffectInstance(EffectInit.fire_shield, Config.FIRE_SHIELD_DURATION.get())));
    RegistryObject<ProjectileSpell> TASER = ITEMS.register("taser", () -> new ProjectileSpell(Config.TASER_USE_DURATION, EntityInit.TASER));
    RegistryObject<ProjectileSpell> LIGHTNING_BOLT = ITEMS.register("lightning_bolt", () -> new ProjectileSpell(Config.LIGHTNING_BOLT_USE_DURATION, EntityInit.LIGHTNING_BOLT));
    RegistryObject<ProjectileSpell> AREA_LIGHTNING = ITEMS.register("area_lightning", () -> new ProjectileSpell(Config.AREA_LIGHTNING_USE_DURATION, EntityInit.AREA_LIGHTNING));
    RegistryObject<PotionSpell> LIGHTNING_SHIELD = ITEMS.register("lightning_shield", () -> new PotionSpell(Config.LIGHTNING_SHIELD_USE_DURATION, () -> new MobEffectInstance(EffectInit.lightning_shield, Config.LIGHTNING_SHIELD_DURATION.get())));
    RegistryObject<ProjectileSpell> SUMMON_WOLF = ITEMS.register("summon_wolf", () -> new ProjectileSpell(Config.SUMMON_WOLF_USE_DURATION, EntityInit.SUMMON_WOLF));
    RegistryObject<ProjectileSpell> SUMMON_SKELETON = ITEMS.register("summon_skeleton", () -> new ProjectileSpell(Config.SUMMON_SKELETON_USE_DURATION, EntityInit.SUMMON_SKELETON));
    RegistryObject<ProjectileSpell> SUMMON_WITHER_SKELETON = ITEMS.register("summon_wither_skeleton", () -> new ProjectileSpell(Config.SUMMON_WITHER_SKELETON_USE_DURATION, EntityInit.SUMMON_WITHER_SKELETON));
    RegistryObject<PotionSpell> SURGE_SHIELD = ITEMS.register("surge_shield", () -> new PotionSpell(Config.SURGE_SHIELD_USE_DURATION, () -> new MobEffectInstance(EffectInit.surge_shield, Config.SURGE_SHIELD_DURATION.get())));
    RegistryObject<PotionSpell> SPELL_SHIELD = ITEMS.register("spell_shield", () -> new PotionSpell(Config.SPELL_SHIELD_USE_DURATION, () -> new MobEffectInstance(EffectInit.spell_shield, Config.SPELL_SHIELD_DURATION.get())));
    RegistryObject<PotionSpell> ARCHMAGIC = ITEMS.register("archmagic", () -> new PotionSpell(Config.ARCHMAGIC_USE_DURATION, () -> new MobEffectInstance(EffectInit.archmagic, Config.ARCHMAGIC_DURATION.get())));
    RegistryObject<ProjectileSpell> DISINTEGRATE = ITEMS.register("disintegrate", () -> new ProjectileSpell(Config.DISINTEGRATE_USE_DURATION, EntityInit.DISINTEGRATE));
    RegistryObject<ProjectileSpell> ELEMENTAL_FURY = ITEMS.register("elemental_fury", () -> new ProjectileSpell(Config.ELEMENTAL_FURY_USE_DURATION, EntityInit.ELEMENTAL_FURY));
    RegistryObject<ProjectileSpell> WAIL_OF_THE_SHE_WOLF = ITEMS.register("wail_of_the_she_wolf", () -> new ProjectileSpell(Config.WAIL_OF_THE_SHE_WOLF_USE_DURATION, EntityInit.WAIL_OF_THE_SHE_WOLF));
    RegistryObject<PanicRoom> PANIC_ROOM = ITEMS.register("panic_room", PanicRoom::new);
    RegistryObject<BedrockWall> BEDROCK_WALL = ITEMS.register("bedrock_wall", BedrockWall::new);
    RegistryObject<ObsidianWall> OBSIDIAN_WALL = ITEMS.register("obsidian_wall", ObsidianWall::new);
    RegistryObject<StoneWall> STONE_WALL = ITEMS.register("stone_wall", StoneWall::new);
    RegistryObject<ProjectileSpell> BREACH = ITEMS.register("breach", () -> new ProjectileSpell(Config.BREACH_USE_DURATION, EntityInit.BREACH));
    RegistryObject<ProjectileSpell> COLOR_SPRAY = ITEMS.register("color_spray", () -> new ProjectileSpell(Config.COLOR_SPRAY_USE_DURATION, EntityInit.COLOR_SPRAY));
    RegistryObject<ProjectileSpell> PUSH = ITEMS.register("push", () -> new ProjectileSpell(Config.PUSH_USE_DURATION, EntityInit.PUSH));
    RegistryObject<DimensionDoor> DIMENSION_DOOR = ITEMS.register("dimension_door", DimensionDoor::new);
    RegistryObject<CookieChest> COOKIE_CHEST = ITEMS.register("cookie_chest", CookieChest::new);
    RegistryObject<ProjectileSpell> CHAOS = ITEMS.register("chaos", () -> new ProjectileSpell(Config.CHAOS_USE_DURATION, EntityInit.CHAOS));
    RegistryObject<ProjectileSpell> MISCAST_MAGIC = ITEMS.register("miscast_magic", () -> new ProjectileSpell(Config.MISCAST_MAGIC_USE_DURATION, EntityInit.MISCAST_MAGIC));
    RegistryObject<PotionSpell> BLINK = ITEMS.register("blink", () -> new PotionSpell(Config.BLINK_USE_DURATION, () -> new MobEffectInstance(MobEffects.INVISIBILITY, Config.BLINK_DURATION.get())));
    RegistryObject<PotionSpell> FISH_FORM = ITEMS.register("fish_form", () -> new PotionSpell(Config.FISH_FORM_USE_DURATION, () -> new MobEffectInstance(MobEffects.WATER_BREATHING, Config.FISH_FORM_DURATION.get())));
    RegistryObject<PotionSpell> FLIGHT = ITEMS.register("flight", () -> new PotionSpell(Config.FLIGHT_USE_DURATION, () -> new MobEffectInstance(EffectInit.flight, Config.FLIGHT_DURATION.get())));
    RegistryObject<PotionSpell> HASTE = ITEMS.register("haste", () -> new PotionSpell(Config.HASTE_USE_DURATION, () -> new MobEffectInstance(MobEffects.DIG_SPEED, Config.HASTE_DURATION.get())));
    RegistryObject<AdvanceTime> ADVANCE_TIME = ITEMS.register("advance_time", AdvanceTime::new);
    RegistryObject<ChangeWeather> CHANGE_WEATHER = ITEMS.register("change_weather", ChangeWeather::new);
    RegistryObject<InstantLevitation> INSTANT_LEVITATION = ITEMS.register("instant_levitation", InstantLevitation::new);
    RegistryObject<Torchlight> TORCHLIGHT = ITEMS.register("torchlight", Torchlight::new);

    static void init() {
    }
}
